@Controller: 웹 애플리케이션의 컨트롤러(Controller) 역할을 하는 클래스에 사용됩니다. 
HTTP 요청을 처리하고, 응답을 반환하는 역할을 수행합니다.

@Repository: 데이터 액세스 계층에서 DAO(또는 매퍼) 역할을 하는 클래스에 사용됩니다. 
데이터베이스와의 연동을 담당하고, 데이터를 조회, 저장, 삭제 등의 작업을 수행합니다.

@Service: 비즈니스 로직을 수행하는 클래스에 사용됩니다. DAO와의 상호작용을 통해 
비즈니스 로직을 처리하고, 트랜잭션 관리 등의 작업을 수행합니다.

@SpringBootApplication: Spring Boot 애플리케이션을 시작할 때 사용되는 메인 클래스에 붙는 애노테이션입니다. 
이 애노테이션은 다음 3가지 애노테이션의 조합으로 이루어져 있습니다.
   (1) @Configuration: 애플리케이션 컨텍스트를 생성하는 빈 설정 클래스를 나타냅니다.
   (2) @EnableAutoConfiguration: Spring Boot의 자동 설정 기능을 활성화합니다. 
       이를 통해 개발자가 직접 빈을 정의하지 않아도 스프링이 자동으로 필요한 빈을 생성하고 구성합니다.
   (3) @ComponentScan: Spring이 컴포넌트를 검색하고 빈으로 등록할 패키지를 지정합니다.
       즉, @SpringBootApplication은 Spring Boot 애플리케이션을 구성하는 빈 설정, 자동 설정, 
       컴포넌트 스캔을 한 번에 처리할 수 있도록 도와주는 편리한 애노테이션입니다. 이를 사용함으로써 
       개발자는 애플리케이션 구성에 대한 복잡성을 줄이고, 더욱 직관적인 구성을 할 수 있습니다.
   